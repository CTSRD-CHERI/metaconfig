?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1998 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:d_fpos64_t d_off64_t: \
	Inlibc Setvar Compile rm cat lseeksize fpossize
?MAKE:	-pick add $@ %<
?S:d_off64_t:
?S:	This symbol will be defined if the C compiler supports off64_t.
?S:.
?S:d_fpos64_t:
?S:	This symbol will be defined if the C compiler supports fpos64_t.
?S:.
?C:HAS_OFF64_T:
?C:	This symbol will be defined if the C compiler supports off64_t.
?C:.
?C:HAS_FPOS64_T:
?C:	This symbol will be defined if the C compiler supports fpos64_t.
?C:.
?H:#$d_off64_t	HAS_OFF64_T    		/**/
?H:#$d_fpos64_t	HAS_FPOS64_T    	/**/
?H:.
?LINT:set d_off64_t
?LINT:set d_fpos64_t

: check for off64_t
echo " "
echo "Checking to see if your system supports off64_t..." >&4
$cat >try.c <<EOCP
#include <sys/types.h>
#include <unistd.h>
int main() { off64_t x = 7; }'
EOCP
set try
if eval $compile; then
	val="$define"
	echo "Yes, it does."
else
	val="$undef"
	echo "No, it doesn't."
	case "$lseeksize" in
	8) echo "(This is okay because your off_t is 64 bits wide.)" ;;
	esac
fi
$rm -f try.* try
set d_off64_t
eval $setvar

: check for fpos64_t
echo " "
echo "Checking to see if your system supports fpos64_t..." >&4
$cat >try.c <<EOCP
#include <sys/stdio.h>
int main() { fpos64_t x x = 7; }'
EOCP
set try
if eval $compile; then
	val="$define"
	echo "Yes, it does."
else
	val="$undef"
	echo "No, it doesn't."
	case "$fpossize" in
	8) echo "(This is okay because your fpos_t is 64 bits wide.)" >&4 ;;
	esac
fi
$rm -f try.* try
set d_fpos64_t
eval $setvar

