?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2001 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:run to from targetarch targetdir targetmkdir targethost targetport usecrosscompile: \
	    src test rm echo sed mkdir cp chmod
?MAKE:	-pick add $@ %<
?Y:TOP
?S:usecrosscompile:
?S:	This variable conditionally defines the USE_CROSS_COMPILE symbol,
?S:	and indicates that Perl has been cross-compiled.
?S:.
?S:run:
?S:	This variable contains the command used by Configure
?S:	to copy and execute a cross-compiled executable in the
?S:	target host.  Useful and available only during Perl build.
?S:	Empty string '' if not cross-compiling.
?S:.
?S:from:
?S:	This variable contains the command used by Configure
?S:	to copy files from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:to:
?S:	This variable contains the command used by Configure
?S:	to copy to from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:targetarch:
?S:	If cross-compiling, this variable contains the target architecture.
?S:	If not, this will be empty.
?S:.
?S:targetdir:
?S:	This variable contains a path that will be created on the target
?S:	host using targetmkdir, and then used to copy the cross-compiled
?S:	executables to. Defaults to '/tmp' if not set.
?S:.
?S:targetmkdir:
?S:	This variable contains the command used by Configure to create a
?S:	new directory on the target host.
?S:.
?S:targethost:
?S:	This variable contains the name of a separate host machine that
?S:	can be used to run compiled test programs and perl tests on.
?S:	Set to empty string if not in use.
?S:.
?S:targetport:
?S:	This variable contains the number of a network port to be used to
?S:	connect to the host in targethost, if unset defaults to 22 for ssh.
?S:.
?C:USE_CROSS_COMPILE:
?C:	This symbol, if defined, indicates that Perl is being cross-compiled.
?C:.
?C:PERL_TARGETARCH:
?C:	This symbol, if defined, indicates the target architecture
?C:	Perl has been cross-compiled to.  Undefined if not a cross-compile.
?C:.
?H:?%<:#ifndef USE_CROSS_COMPILE
?H:?%<:#$usecrosscompile	USE_CROSS_COMPILE	/**/
?H:?%<:#define	PERL_TARGETARCH	"$targetarch"	/**/
?H:?%<:#endif
?H:.
?D:targethost=''
?D:targetmkdir=''
?T:croak pwd exe f q cwd file xxx
?LINT:extern usecrosscompile
?LINT:extern cc
?LINT:extern usrinc
?LINT:change ar
?LINT:change nm
?LINT:change ranlib
?LINT:extern targetport
?LINT:extern targetdir
?LINT:extern targetuser
?LINT:change targetuser
?LINT:extern targetrun
?LINT:extern targetfrom
?LINT:extern targetto
?LINT:change targetrun
?LINT:change targetfrom
?LINT:change targetto
?LINT:extern incpth
?LINT:extern libpth
?LINT:extern locincpth
?LINT:extern loclibpth
?LINT:change locincpth
?LINT:change loclibpth
?LINT:extern hostperl
?LINT:extern hostgenerate
: Check for Cross-Compilation
?X: targethost mainly set to allow ?S: documentation
?X:otherwise it could have been declared extern
if $test "X$targethost" = "X"; then
    targethost=""
fi
case "$usecrosscompile" in
$define|true|[yY]*)
	$echo "Cross-compiling..."
	croak=''
	case "$cc" in
	*-gcc*|*-g++*) # A cross-compiling gcc, probably.
	    # arm-linux-androideabi-gcc  -> arm-linux-androideabi
	    # x86_64-w64-mingw32-gcc.exe -> x86_64-w64-mingw32
	    targetarch=`$echo $cc|$sed 's/-g[c\+][c\+].*$//'`
	    ar=`$echo $cc|$sed 's/-g[c\+][c\+]/-ar/'`
	    # leave out ld, choosing it is more complex
	    nm=`$echo $cc|$sed 's/-g[c\+][c\+]/-nm/'`
	    ranlib=`$echo $cc|$sed 's/-g[c\+][c\+]/-ranlib/'`
	    # We are in a weird spot. Just before us, some values
	    # were 'saved', to be restored after the hints are
	    # run.  This means that the changes we made to ar,
	    # nm and ranlib will get reverted.
	    # To avoid that, we hijack the saving mechanism and
	    # have it save our new values.
	    for file in ar nm ranlib; do
		eval xxx=\$$file
		eval $file=$xxx$_exe
		eval _$file=$xxx
	    done
	;;
	esac
	case "$targetarch" in
	'') echo "Targetarch not defined." >&4; croak=y ;;
	*)  echo "Using targetarch $targetarch." >&4 ;;
	esac
	case "$targethost" in
	'') echo "Targethost not defined." >&4; croak=y ;;
	*)  echo "Using targethost $targethost." >&4
	esac
	locincpth=' '
	loclibpth=' '
	case "$croak" in
	y) echo "Cannot continue, aborting." >&4; exit 1 ;;
	esac
	case "$src" in
	/*) run=$src/Cross/run
	    targetmkdir=$src/Cross/mkdir
	    to=$src/Cross/to
	    from=$src/Cross/from
	    ;;
	*)  pwd=`$test -f ../Configure & cd ..; pwd`
	    run=$pwd/Cross/run
	    targetmkdir=$pwd/Cross/mkdir
	    to=$pwd/Cross/to
	    from=$pwd/Cross/from
	    ;;
	esac
	case "$targetrun" in
	'') targetrun=ssh ;;
	esac
	case "$targetto" in
	'') targetto=scp ;;
	esac
	case "$targetfrom" in
	'') targetfrom=scp ;;
	esac
	run=$run-$targetrun
	to=$to-$targetto
	from=$from-$targetfrom
	case "$targetdir" in
	'')  targetdir=/tmp
	     echo "Guessing targetdir $targetdir." >&4
	     ;;
	esac
	case "$targetuser" in
	'')  targetuser=root
	     echo "Guessing targetuser $targetuser." >&4
	     ;;
	esac
	case "$targetport" in
	'')  targetport=22
	     echo "Guessing targetport $targetport." >&4
	     ;;
	esac
	case "$targetfrom" in
	scp)	q=-q ;;
	*)	q='' ;;
	esac
	case "$targetrun" in
	ssh|rsh)
	    cat >$run <<EOF
#!/bin/sh
case "\$1" in
-cwd)
  shift
  cwd=\$1
  shift
  ;;
esac
case "\$cwd" in
'') cwd=$targetdir ;;
esac
exe=\$1
shift
$to \$exe
$targetrun -p $targetport -l $targetuser $targethost "cd \$cwd && ./\$exe \$@"
EOF
	    ;;
	*)  echo "Unknown targetrun '$targetrun'" >&4
	    exit 1
	    ;;
	esac
	case "$targetmkdir" in
	*/Cross/mkdir)
	    cat >$targetmkdir <<EOF
#!/bin/sh
$targetrun -p $targetport -l $targetuser $targethost "mkdir -p \$@"
EOF
	    $chmod a+rx $targetmkdir
	    ;;
	*)  echo "Unknown targetmkdir '$targetmkdir'" >&4
	    exit 1
	    ;;
	esac
	case "$targetto" in
	scp|rcp)
	    cat >$to <<EOF
#!/bin/sh
for f in \$@
do
  case "\$f" in
  /*)
    $targetmkdir \`dirname \$f\`
    $targetto -P $targetport $q \$f $targetuser@$targethost:\$f            || exit 1
    ;;
  *)
    $targetmkdir $targetdir/\`dirname \$f\`
    $targetto -P $targetport $q \$f $targetuser@$targethost:$targetdir/\$f || exit 1
    ;;
  esac
done
exit 0
EOF
	    ;;
	cp) cat >$to <<EOF
#!/bin/sh
for f in \$@
do
  case "\$f" in
  /*)
    $mkdir -p $targetdir/\`dirname \$f\`
    $cp \$f $targetdir/\$f || exit 1
    ;;
  *)
    $targetmkdir $targetdir/\`dirname \$f\`
    $cp \$f $targetdir/\$f || exit 1
    ;;
  esac
done
exit 0
EOF
	    ;;
	*)  echo "Unknown targetto '$targetto'" >&4
	    exit 1
	    ;;
	esac
	case "$targetfrom" in
	scp|rcp)
	  cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  $rm -f \$f
  $targetfrom -P $targetport $q $targetuser@$targethost:$targetdir/\$f . || exit 1
done
exit 0
EOF
	    ;;
	cp) cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  $rm -f \$f
  cp $targetdir/\$f . || exit 1
done
exit 0
EOF
	    ;;
	*)  echo "Unknown targetfrom '$targetfrom'" >&4
	    exit 1
	    ;;
	esac
	if $test ! -f $run; then
	    echo "Target 'run' script '$run' not found." >&4
	else
	    $chmod a+rx $run
	fi
	if $test ! -f $to; then
	    echo "Target 'to' script '$to' not found." >&4
	else
	    $chmod a+rx $to
	fi
	if $test ! -f $from; then
	    echo "Target 'from' script '$from' not found." >&4
	else
	    $chmod a+rx $from
	fi
	if $test ! -f $run -o ! -f $to -o ! -f $from; then
	    exit 1
	fi
	cat >&4 <<EOF
Using '$run' for remote execution,
and '$from' and '$to'
for remote file transfer.
EOF
	;;
*)	run=''
	to=:
	from=:
	usecrosscompile='undef'
	targetarch=''
	;;
esac

