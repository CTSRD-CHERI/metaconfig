?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2001 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:run to from targetarch usecrosscompile: src
?MAKE:	-pick add $@ %<
?Y:TOP
?S:usecrosscompile:
?S:	This variable conditionally defines the USE_CROSS_COMPILE symbol,
?S:	and indicates that Perl has been cross-compiled.
?S:.
?S:run:
?S:	This variable contains the command used by Configure
?S:	to copy and execute a cross-compiled executable in the
?S:	target host.  Useful and available only during Perl build.
?S:	Empty string '' if not cross-compiling.
?S:.
?S:from:
?S:	This variable contains the command used by Configure
?S:	to copy files from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:to:
?S:	This variable contains the command used by Configure
?S:	to copy to from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:targetarch:
?S:	If cross-compiling, this variable contains the target architecture.
?S:	If not, this will be empty.
?S:.
?C:USE_CROSS_COMPILE:
?C:	This symbol, if defined, indicates that Perl is being cross-compiled.
?C:.
?C:PERL_TARGETARCH:
?C:	This symbol, if defined, indicates the target architecture
?C:	Perl has been cross-compiled to.  Undefined if not a cross-compile.
?C:.
?H:
?H:?%<:#ifndef USE_CROSS_COMPILE
?H:?%<:#$usecrosscompile	USE_CROSS_COMPILE	/**/
?H:?%<:#define	PERL_TARGETARCH	"$targetarch"	/**/
?H:?%<:#endif
?H:.
?T:croak pwd exe f q
?LINT:extern usecrosscompile
?LINT:extern cc
?LINT:extern usrinc
?LINT:extern incpth
?LINT:extern libpth
?LINT:change ar
?LINT:change nm
?LINT:change ranlib
?LINT:extern targethost
?LINT:extern targetdir
?LINT:extern targetuser
?LINT:change targetuser
?LINT:extern targetrun
?LINT:extern targetfrom
?LINT:extern targetto
?LINT:change targetrun
?LINT:change targetfrom
?LINT:change targetto
?LINT:extern locincpth
?LINT:extern loclibpth
?LINT:change locincpth
?LINT:change loclibpth

case "$usecrosscompile" in
$define|true|[yY]*)
        croak=''
    	case "$cc" in
	*-*-gcc) # A cross-compiling gcc, probably.
	    targetarch=`echo $cc|sed 's/-gcc$//'`
	    ar=$targetarch-ar
	    # leave out ld, choosing it is more complex
	    nm=$targetarch-nm
	    ranlib=$targetarch-ranlib
	    ;;
	esac
	case "$targetarch" in
	'') echo "Cross-compiling: you should define targetarch." >&4; croak=y ;;
	esac
	case "$usrinc" in
	'') echo "Cross-compiling: you should define usrinc." >&4; croak=y ;;
	esac
	case "$incpth" in
	'') echo "Cross-compiling: you should define incpth." >&4; croak=y ;;
	esac
	case "$libpth" in
	'') echo "Cross-compiling: you should define libpth." >&4; croak=y ;;
	esac
	case "$targethost" in
	'') echo "Cross-compiling: targethost not defined." >&4; croak=y ;;
	esac
	case "$targetdir" in
	'') echo "Cross compiling: targetdir not defined." >&4; croak=y ;;
	esac
	locincpth=''
	loclibpth=''
	case "$croak" in
	y) exit 1 ;;
	esac
	case "$src" in
	/*) run=$src/Cross/run
	    to=$src/Cross/to
	    from=$src/Cross/from
	    ;;
	*)  pwd=`test -f ../Configure & cd ..; pwd`
	    run=$pwd/Cross/run
	    to=$pwd/Cross/to
	    from=$pwd/Cross/from
	    ;;
	esac
	case "$targetrun" in
	'') targetrun=ssh ;;
	esac
	case "$targetto" in
	'') targetto=scp ;;
	esac
	case "$targetfrom" in
	'') targetfrom=scp ;;
	esac
    	run=$run-$targetrun
    	to=$to-$targetto
    	from=$from-$targetfrom
	case "$targetuser" in
	'') targetuser=root ;;
	esac
	case "$targetfrom" in
	scp)	q=-q ;;
	*)	q='' ;;
	esac
	case "$targetrun" in
	ssh|rsh)
	    cat >$run <<EOF
#!/bin/sh
exe=\$1
shift
$to \$exe
$targetrun -l $targetuser $targethost "cd $targetdir && ./\$exe \$@"
EOF
	    ;;
	*)  echo "Cross-compiling: unknown targetrun '$targetrun'" >&4
	    exit 1
	    ;;
	esac
	case "$targetto" in
	scp|rcp)
	    cat >$to <<EOF
#!/bin/sh
for f in \$@
do
  $targetto $q \$f $targetuser@$targethost:$targetdir/. || exit 1
done
exit 0
EOF
	    ;;
	cp) cat >$to <<EOF
#!/bin/sh
cp \$@ $targetdir/.
EOF
	    ;;
	*)  echo "Cross-compiling: unknown targetto '$targetto'" >&4
	    exit 1
	    ;;
	esac
	case "$targetfrom" in
	scp|rcp)
	  cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  $targetfrom $q $targetuser@$targethost:$targetdir/\$f . || exit 1
done
exit 0
EOF
	    ;;
	cp) cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  cp $targetdir/\$f . || exit 1
done
exit 0
EOF
	    ;;
	*)  echo "Cross-compiling: unknown targetfrom '$targetfrom'" >&4
	    exit 1
	    ;;
	esac
	if test ! -f $run; then
	    echo "Cross-compiling: target 'run' script '$run' not found." >&4
	else
	    chmod a+rx $run
	fi
	if test ! -f $to; then
	    echo "Cross-compiling: target 'to' script '$to' not found." >&4
	else
	    chmod a+rx $to
	fi
	if test ! -f $from; then
	    echo "Cross-compiling: target 'from' script '$from' not found." >&4
	else
	    chmod a+rx $from
	fi
	if test ! -f $run -o ! -f $to -o ! -f $from; then
	    exit 1
	fi
	cat >&4 <<EOF
Cross-compiling: Using
	$run-ssh
	$to-ssh
	$from-ssh
EOF
	;;
*)	run=''
	to=:
	from=:
	usecrosscompile='undef'
	targetarch=''
	;;
esac

