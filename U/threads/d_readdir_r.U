?RCS: $Id: d_readdir_r.U,v 0RCS:
?RCS: Copyright (c) 2002 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_readdir_r readdir_r_proto: Inlibc Protochk Hasproto i_systypes i_dirent usethreads
?MAKE:	-pick add $@ %<
?S:d_readdir_r:
?S:	This variable conditionally defines the HAS_READDIR_R symbol,
?S:	which indicates to the C program that the readdir_r()
?S:	routine is available.
?S:.
?S:readdir_r_proto:
?S:	This variable encodes the prototype of readdir_r.
?S:.
?C:HAS_READDIR_R:
?C:	This symbol, if defined, indicates that the readdir_r routine
?C:	is available to readdir re-entrantly.
?C:.
?C:READDIR_R_PROTO:
?C:	This symbol encodes the prototype of readdir_r.
?C:.
?H:#$d_readdir_r HAS_READDIR_R	   /**/
?H:#define READDIR_R_PROTO $readdir_r_proto	   /**/
?H:.
?T:try hdrs d_readdir_r_proto
?LINT:set d_readdir_r
?LINT:set readdir_r_proto
: see if readdir_r exists
set readdir_r d_readdir_r
eval $inlibc
case "$d_readdir_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_dirent dirent.h"
	case "dirent" in
	time)
		hdrs="$hdrs $i_systime sys/time.h"
		;;
	esac
	case "$d_readdir_r_proto:$usethreads" in
	":define")	d_readdir_r_proto=define
		set d_readdir_r_proto readdir_r $hdrs
		eval $hasproto ;;
	*)	;;
	esac
	case "$d_readdir_r_proto" in
	define)
	case "$readdir_r_proto" in
	''|0) try='int readdir_r(DIR*, struct dirent*, struct dirent**);'
	./protochk "extern $try" $hdrs && readdir_r_proto=I_TSR ;;
	esac
	case "$readdir_r_proto" in
	''|0) try='int readdir_r(DIR*, struct dirent*);'
	./protochk "extern $try" $hdrs && readdir_r_proto=I_TS ;;
	esac
	case "$readdir_r_proto" in
	''|0)	d_readdir_r=undef
 	        readdir_r_proto=0
		echo "Disabling readdir_r, cannot determine prototype." >&4 ;;
	* )	case "$readdir_r_proto" in
		REENTRANT_PROTO*) ;;
		*) readdir_r_proto="REENTRANT_PROTO_$readdir_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
	*)	case "$usethreads" in
		define) echo "readdir_r has no prototype, not using it." >&4 ;;
		esac
		d_readdir_r=undef
		readdir_r_proto=0
		;;
	esac
	;;
*)	readdir_r_proto=0
	;;
esac

