?MAKE:d_ctime_r ctime_r_proto: Inlibc Protochk i_systypes i_time
?MAKE:  -pick add $@ %<
?S:d_ctime_r:
?S:     This variable conditionally defines the HAS_CTIME_R symbol,
?S:     which indicates to the C program that the ctime_r()
?S:     routine is available.
?S:.
?S:ctime_r_proto:
?S:     This variable encodes the prototype of ctime_r.
?S:.
?C:HAS_CTIME_R:
?C:     This symbol, if defined, indicates that the ctime_r routine
?C:     is available to ctime re-entrantly.
?C:.
?C:CTIME_R_PROTO:
?C:     This symbol encodes the prototype of ctime_r.
?C:.
?H:#$d_ctime_r HAS_CTIME_R          /**/
?H:#define CTIME_R_PROTO $ctime_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_ctime_r
?LINT:set ctime_r_proto
: see if ctime_r exists
set ctime_r d_ctime_r
eval $inlibc
case "$d_ctime_r" in
"$define")
	hdrs="$i_systypes sys/types.h $i_time time.h"
	case "$ctime_r_proto" in
	'')	try='extern char* ctime_r(const time_t*, char*);'
		./protochk "$try" $hdrs && ctime_r_proto=B_SB;
	;;
	esac
	case "$ctime_r_proto" in
	'')	try='extern char* ctime_r(const time_t*, char*, int);'
		./protochk "$try" $hdrs && ctime_r_proto=B_SBI;
	;;
	esac
	case "$ctime_r_proto" in
	'')	try='extern int ctime_r(const time_t*, char*);'
		./protochk "$try" $hdrs && ctime_r_proto=I_SB;
	;;
	esac
	case "$ctime_r_proto" in
	'')	try='extern int ctime_r(const time_t*, char*, int);'
		./protochk "$try" $hdrs && ctime_r_proto=I_SBI;
	;;
	esac
	case "$ctime_r_proto" in
	'') d_ctime_r=undef ; echo "Disabling ctime_r, cannot find prototype." ;;
	* ) ctime_r_proto="REENTRANT_$ctime_r_proto" ; echo "$try" ;;
	esac
	;;
esac

