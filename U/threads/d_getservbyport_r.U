?MAKE:d_getservbyport_r getservbyport_r_proto: Inlibc Protochk i_systypes i_netdb
?MAKE:  -pick add $@ %<
?S:d_getservbyport_r:
?S:     This variable conditionally defines the HAS_GETSERVBYPORT_R symbol,
?S:     which indicates to the C program that the getservbyport_r()
?S:     routine is available.
?S:.
?S:getservbyport_r_proto:
?S:     This variable encodes the prototype of getservbyport_r.
?S:.
?C:HAS_GETSERVBYPORT_R:
?C:     This symbol, if defined, indicates that the getservbyport_r routine
?C:     is available to getservbyport re-entrantly.
?C:.
?C:GETSERVBYPORT_R_PROTO:
?C:     This symbol encodes the prototype of getservbyport_r.
?C:.
?H:#$d_getservbyport_r HAS_GETSERVBYPORT_R          /**/
?H:#define GETSERVBYPORT_R_PROTO $getservbyport_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_getservbyport_r
?LINT:set getservbyport_r_proto
: see if getservbyport_r exists
set getservbyport_r d_getservbyport_r
eval $inlibc
case "$d_getservbyport_r" in
"$define")
	hdrs="$i_systypes sys/types.h $i_netdb netdb.h"
	case "$getservbyport_r_proto" in
	'')	try='extern int getservbyport_r(int, const char*, struct servent*, size_t, struct servent**);'
		./protochk "$try" $hdrs && getservbyport_r_proto=I_ICSWR;
	;;
	esac
	case "$getservbyport_r_proto" in
	'')	try='extern struct servent* getservbyport_r(int, const char*, struct servent*, char*, int);'
		./protochk "$try" $hdrs && getservbyport_r_proto=S_ICSBI;
	;;
	esac
	case "$getservbyport_r_proto" in
	'')	try='extern int getservbyport_r(int, const char*, struct servent*, struct servent_data*);'
		./protochk "$try" $hdrs && getservbyport_r_proto=I_ICSD;
	;;
	esac
	case "$getservbyport_r_proto" in
	'') d_getservbyport_r=undef ; echo "Disabling getservbyport_r, cannot find prototype." ;;
	* ) getservbyport_r_proto="REENTRANT_$getservbyport_r_proto" ; echo "$try" ;;
	esac
	;;
esac

