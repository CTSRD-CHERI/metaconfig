?RCS: $Id: d_localtime_r.U,v 0RCS:
?RCS: Copyright (c) 2002 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_localtime_r localtime_r_proto: Inlibc Protochk Hasproto i_systypes i_time usethreads
?MAKE:	-pick add $@ %<
?S:d_localtime_r:
?S:	This variable conditionally defines the HAS_LOCALTIME_R symbol,
?S:	which indicates to the C program that the localtime_r()
?S:	routine is available.
?S:.
?S:localtime_r_proto:
?S:	This variable encodes the prototype of localtime_r.
?S:.
?C:HAS_LOCALTIME_R:
?C:	This symbol, if defined, indicates that the localtime_r routine
?C:	is available to localtime re-entrantly.
?C:.
?C:LOCALTIME_R_PROTO:
?C:	This symbol encodes the prototype of localtime_r.
?C:.
?H:#$d_localtime_r HAS_LOCALTIME_R	   /**/
?H:#define LOCALTIME_R_PROTO $localtime_r_proto	   /**/
?H:.
?T:try hdrs d_localtime_r_proto
?LINT:set d_localtime_r
?LINT:set localtime_r_proto
: see if localtime_r exists
set localtime_r d_localtime_r
eval $inlibc
case "$d_localtime_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_time time.h"
	case "$d_localtime_r_proto:$usethreads" in
	":define")	d_localtime_r_proto=define
		set d_localtime_r_proto localtime_r $hdrs
		eval $hasproto ;;
	*)	;;
	esac
	case "$d_localtime_r_proto" in
	define)
	case "$localtime_r_proto" in
	''|0) try='struct tm* localtime_r(const time_t*, struct tm*);'
	./protochk "extern $try" $hdrs && localtime_r_proto=S_TS ;;
	esac
	case "$localtime_r_proto" in
	''|0) try='int localtime_r(const time_t*, struct tm*);'
	./protochk "extern $try" $hdrs && localtime_r_proto=I_TS ;;
	esac
	case "$localtime_r_proto" in
	'')	d_localtime_r=undef
 	        localtime_r_proto=0
		echo "Disabling localtime_r, cannot determine prototype." >&4 ;;
	* )	case "$localtime_r_proto" in
		REENTRANT_PROTO*) ;;
		*) localtime_r_proto="REENTRANT_PROTO_$localtime_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
	*)	case "$usethreads" in
		define) echo "localtime_r has no prototype, not using it." >&4 ;;
		esac
		;;
	esac
	;;
*)	localtime_r_proto=0
	;;
esac

