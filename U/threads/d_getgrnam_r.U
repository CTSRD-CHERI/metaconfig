?MAKE:d_getgrnam_r getgrnam_r_proto: Inlibc Protochk i_systypes i_dirent
?MAKE:  -pick add $@ %<
?S:d_getgrnam_r:
?S:     This variable conditionally defines the HAS_GETGRNAM_R symbol,
?S:     which indicates to the C program that the getgrnam_r()
?S:     routine is available.
?S:.
?S:getgrnam_r_proto:
?S:     This variable encodes the prototype of getgrnam_r.
?S:.
?C:HAS_GETGRNAM_R:
?C:     This symbol, if defined, indicates that the getgrnam_r routine
?C:     is available to getgrnam re-entrantly.
?C:.
?C:GETGRNAM_R_PROTO:
?C:     This symbol encodes the prototype of getgrnam_r.
?C:.
?H:#$d_getgrnam_r HAS_GETGRNAM_R          /**/
?H:#define GETGRNAM_R_PROTO $getgrnam_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_getgrnam_r
?LINT:set getgrnam_r_proto
: see if getgrnam_r exists
set getgrnam_r d_getgrnam_r
eval $inlibc
case "$d_getgrnam_r" in
"$define")
	hdrs="$i_systypes sys/types.h ${i}_grp grp.h"
	case "$getgrnam_r_proto" in
	'')	try='extern int getgrnam_r(const char*, struct group*, char*, size_t, struct group**);'
		./protochk "$try" $hdrs && getgrnam_r_proto=I_CSBWR;
	;;
	esac
	case "$getgrnam_r_proto" in
	'')	try='extern int getgrnam_r(const char*, struct group*, char*, int, struct group**);'
		./protochk "$try" $hdrs && getgrnam_r_proto=I_CSBIR;
	;;
	esac
	case "$getgrnam_r_proto" in
	'')	try='extern int getgrnam_r(const char*, struct group*, char*, int);'
		./protochk "$try" $hdrs && getgrnam_r_proto=I_CSBI;
	;;
	esac
	case "$getgrnam_r_proto" in
	'')	try='extern struct group* getgrnam_r(const char*, struct group*, char*, int);'
		./protochk "$try" $hdrs && getgrnam_r_proto=S_CSBI;
	;;
	esac
	case "$getgrnam_r_proto" in
	'') d_getgrnam_r=undef ; echo "Disabling getgrnam_r, cannot find prototype." ;;
	* ) getgrnam_r_proto="REENTRANT_$getgrnam_r_proto" ; echo "$try" ;;
	esac
	;;
esac

