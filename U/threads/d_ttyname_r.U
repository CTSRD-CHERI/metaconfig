?MAKE:d_ttyname_r ttyname_r_proto: Inlibc Protochk i_systypes i_dirent
?MAKE:  -pick add $@ %<
?S:d_ttyname_r:
?S:     This variable conditionally defines the HAS_TTYNAME_R symbol,
?S:     which indicates to the C program that the ttyname_r()
?S:     routine is available.
?S:.
?S:ttyname_r_proto:
?S:     This variable encodes the prototype of ttyname_r.
?S:.
?C:HAS_TTYNAME_R:
?C:     This symbol, if defined, indicates that the ttyname_r routine
?C:     is available to ttyname re-entrantly.
?C:.
?C:TTYNAME_R_PROTO:
?C:     This symbol encodes the prototype of ttyname_r.
?C:.
?H:#$d_ttyname_r HAS_TTYNAME_R          /**/
?H:#define TTYNAME_R_PROTO $ttyname_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_ttyname_r
?LINT:set ttyname_r_proto
: see if ttyname_r exists
set ttyname_r d_ttyname_r
eval $inlibc
case "$d_ttyname_r" in
"$define")
	hdrs="$i_systypes sys/types.h ${i}_unistd unistd.h"
	case "$ttyname_r_proto" in
	'')	try='extern int ttyname_r(int, char*, size_t);'
		./protochk "$try" $hdrs && ttyname_r_proto=I_IBW;
	;;
	esac
	case "$ttyname_r_proto" in
	'')	try='extern int ttyname_r(int, char*, int);'
		./protochk "$try" $hdrs && ttyname_r_proto=I_IBI;
	;;
	esac
	case "$ttyname_r_proto" in
	'')	try='extern char* ttyname_r(int, char*, int);'
		./protochk "$try" $hdrs && ttyname_r_proto=B_IBI;
	;;
	esac
	case "$ttyname_r_proto" in
	'') d_ttyname_r=undef ; echo "Disabling ttyname_r, cannot find prototype." ;;
	* ) ttyname_r_proto="REENTRANT_$ttyname_r_proto" ; echo "$try" ;;
	esac
	;;
esac

