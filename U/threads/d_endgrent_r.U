?MAKE:d_endgrent_r endgrent_r_proto: Inlibc Protochk i_systypes i_dirent
?MAKE:  -pick add $@ %<
?S:d_endgrent_r:
?S:     This variable conditionally defines the HAS_ENDGRENT_R symbol,
?S:     which indicates to the C program that the endgrent_r()
?S:     routine is available.
?S:.
?S:endgrent_r_proto:
?S:     This variable encodes the prototype of endgrent_r.
?S:.
?C:HAS_ENDGRENT_R:
?C:     This symbol, if defined, indicates that the endgrent_r routine
?C:     is available to endgrent re-entrantly.
?C:.
?C:ENDGRENT_R_PROTO:
?C:     This symbol encodes the prototype of endgrent_r.
?C:.
?H:#$d_endgrent_r HAS_ENDGRENT_R          /**/
?H:#define ENDGRENT_R_PROTO $endgrent_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_endgrent_r
?LINT:set endgrent_r_proto
: see if endgrent_r exists
set endgrent_r d_endgrent_r
eval $inlibc
case "$d_endgrent_r" in
"$define")
	hdrs="$i_systypes sys/types.h ${i}_grp grp.h"
	case "$endgrent_r_proto" in
	'')	try='extern int endgrent_r(FILE**);'
		./protochk "$try" $hdrs && endgrent_r_proto=I_H;
	;;
	esac
	case "$endgrent_r_proto" in
	'')	try='extern void endgrent_r(FILE**);'
		./protochk "$try" $hdrs && endgrent_r_proto=V_H;
	;;
	esac
	case "$endgrent_r_proto" in
	'') d_endgrent_r=undef ; echo "Disabling endgrent_r, cannot find prototype." ;;
	* ) endgrent_r_proto="REENTRANT_$endgrent_r_proto" ; echo "$try" ;;
	esac
	;;
esac

