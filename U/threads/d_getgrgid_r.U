?RCS: $Id: d_getgrgid_r.U,v 0RCS:
?RCS: Copyright (c) 2002 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_getgrgid_r getgrgid_r_proto: Inlibc Protochk i_systypes i_grp
?MAKE:	-pick add $@ %<
?S:d_getgrgid_r:
?S:	This variable conditionally defines the HAS_GETGRGID_R symbol,
?S:	which indicates to the C program that the getgrgid_r()
?S:	routine is available.
?S:.
?S:getgrgid_r_proto:
?S:	This variable encodes the prototype of getgrgid_r.
?S:.
?C:HAS_GETGRGID_R:
?C:	This symbol, if defined, indicates that the getgrgid_r routine
?C:	is available to getgrgid re-entrantly.
?C:.
?C:GETGRGID_R_PROTO:
?C:	This symbol encodes the prototype of getgrgid_r.
?C:.
?H:#$d_getgrgid_r HAS_GETGRGID_R	   /**/
?H:#define GETGRGID_R_PROTO $getgrgid_r_proto	   /**/
?H:.
?T:try hdrs
?LINT:set d_getgrgid_r
?LINT:set getgrgid_r_proto
: see if getgrgid_r exists
set getgrgid_r d_getgrgid_r
eval $inlibc
case "$d_getgrgid_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_grp grp.h"
	case "$getgrgid_r_proto" in
	'') try='int getgrgid_r(gid_t, struct group*, char*, size_t, struct group**);'
	./protochk "extern $try" $hdrs && getgrgid_r_proto=I_TSBWR ;;
	esac
	case "$getgrgid_r_proto" in
	'') try='int getgrgid_r(gid_t, struct group*, char*, int, struct group**);'
	./protochk "extern $try" $hdrs && getgrgid_r_proto=I_TSBIR ;;
	esac
	case "$getgrgid_r_proto" in
	'') try='int getgrgid_r(gid_t, struct group*, char*, int);'
	./protochk "extern $try" $hdrs && getgrgid_r_proto=I_TSBI ;;
	esac
	case "$getgrgid_r_proto" in
	'') try='struct group* getgrgid_r(gid_t, struct group*, char*, int);'
	./protochk "extern $try" $hdrs && getgrgid_r_proto=S_TSBI ;;
	esac
	case "$getgrgid_r_proto" in
	'')	d_getgrgid_r=undef
		echo "Disabling getgrgid_r, cannot determine prototype." ;;
	* )	case "$getgrgid_r_proto" in
		REENTRANT_PROTO*) ;;
		*) getgrgid_r_proto="REENTRANT_PROTO_$getgrgid_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
esac

