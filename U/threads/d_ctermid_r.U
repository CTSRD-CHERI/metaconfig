?RCS: $Id: d_ctermid_r.U,v 0RCS:
?RCS: Copyright (c) 2002 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?RCS: Generated by the reentr.pl from the Perl 5.8 distribution.
?RCS:
?MAKE:d_ctermid_r ctermid_r_proto: Inlibc Protochk i_systypes 
?MAKE:	-pick add $@ %<
?S:d_ctermid_r:
?S:	This variable conditionally defines the HAS_CTERMID_R symbol,
?S:	which indicates to the C program that the ctermid_r()
?S:	routine is available.
?S:.
?S:ctermid_r_proto:
?S:	This variable encodes the prototype of ctermid_r.
?S:.
?C:HAS_CTERMID_R:
?C:	This symbol, if defined, indicates that the ctermid_r routine
?C:	is available to ctermid re-entrantly.
?C:.
?C:CTERMID_R_PROTO:
?C:	This symbol encodes the prototype of ctermid_r.
?C:.
?H:#$d_ctermid_r HAS_CTERMID_R	   /**/
?H:#define CTERMID_R_PROTO $ctermid_r_proto	   /**/
?H:.
?T:try hdrs
?LINT:set d_ctermid_r
?LINT:set ctermid_r_proto
: see if ctermid_r exists
set ctermid_r d_ctermid_r
eval $inlibc
case "$d_ctermid_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_stdio stdio.h"
	case "$ctermid_r_proto" in
	''|0) try='char* ctermid_r(char*);'
	./protochk "extern $try" $hdrs && ctermid_r_proto=B_B ;;
	esac
	case "$ctermid_r_proto" in
	'')	d_ctermid_r=undef
 	        ctermid_r_proto=0
		echo "Disabling ctermid_r, cannot determine prototype." ;;
	* )	case "$ctermid_r_proto" in
		REENTRANT_PROTO*) ;;
		*) ctermid_r_proto="REENTRANT_PROTO_$ctermid_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
*)	ctermid_r_proto=0
	;;
esac

