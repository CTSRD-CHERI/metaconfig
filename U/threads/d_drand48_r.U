?MAKE:d_drand48_r drand48_r_proto: Inlibc Protochk i_systypes i_stdlib
?MAKE:	-pick add $@ %<
?S:d_drand48_r:
?S:	This variable conditionally defines the HAS_DRAND48_R symbol,
?S:	which indicates to the C program that the drand48_r()
?S:	routine is available.
?S:.
?S:drand48_r_proto:
?S:	This variable encodes the prototype of drand48_r.
?S:.
?C:HAS_DRAND48_R:
?C:	This symbol, if defined, indicates that the drand48_r routine
?C:	is available to drand48 re-entrantly.
?C:.
?C:DRAND48_R_PROTO:
?C:	This symbol encodes the prototype of drand48_r.
?C:.
?H:#$d_drand48_r HAS_DRAND48_R	   /**/
?H:#define DRAND48_R_PROTO $drand48_r_proto	   /**/
?H:.
?T:try hdrs
?LINT:set d_drand48_r
?LINT:set drand48_r_proto
: see if drand48_r exists
set drand48_r d_drand48_r
eval $inlibc
case "$d_drand48_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_stdlib stdlib.h"
	case "$drand48_r_proto" in
	'') try='int drand48_r(struct drand48_data*, double*);'
	./protochk "extern $try" $hdrs && drand48_r_proto=I_ST ;;
	esac
	case "$drand48_r_proto" in
	'')	d_drand48_r=undef
		echo "Disabling drand48_r, cannot determine prototype." ;;
	* )	case "$drand48_r_proto" in
		REENTRANT_PROTO*) ;;
		*) drand48_r_proto="REENTRANT_PROTO_$drand48_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
esac

