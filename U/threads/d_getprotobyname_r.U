?MAKE:d_getprotobyname_r getprotobyname_r_proto: Inlibc Protochk i_systypes i_netdb
?MAKE:  -pick add $@ %<
?S:d_getprotobyname_r:
?S:     This variable conditionally defines the HAS_GETPROTOBYNAME_R symbol,
?S:     which indicates to the C program that the getprotobyname_r()
?S:     routine is available.
?S:.
?S:getprotobyname_r_proto:
?S:     This variable encodes the prototype of getprotobyname_r.
?S:.
?C:HAS_GETPROTOBYNAME_R:
?C:     This symbol, if defined, indicates that the getprotobyname_r routine
?C:     is available to getprotobyname re-entrantly.
?C:.
?C:GETPROTOBYNAME_R_PROTO:
?C:     This symbol encodes the prototype of getprotobyname_r.
?C:.
?H:#$d_getprotobyname_r HAS_GETPROTOBYNAME_R          /**/
?H:#define GETPROTOBYNAME_R_PROTO $getprotobyname_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_getprotobyname_r
?LINT:set getprotobyname_r_proto
: see if getprotobyname_r exists
set getprotobyname_r d_getprotobyname_r
eval $inlibc
case "$d_getprotobyname_r" in
"$define")
	hdrs="$i_systypes sys/types.h $i_netdb netdb.h"
	case "$getprotobyname_r_proto" in
	'')	try='extern int getprotobyname_r(const char*, struct protoent*, size_t, char*, struct protoent**);'
		./protochk "$try" $hdrs && getprotobyname_r_proto=I_CSWBR;
	;;
	esac
	case "$getprotobyname_r_proto" in
	'')	try='extern struct protoent* getprotobyname_r(const char*, struct protoent*, char*, int);'
		./protochk "$try" $hdrs && getprotobyname_r_proto=S_CSBI;
	;;
	esac
	case "$getprotobyname_r_proto" in
	'')	try='extern int getprotobyname_r(const char*, struct protoent*, struct protoent_data*);'
		./protochk "$try" $hdrs && getprotobyname_r_proto=I_CSD;
	;;
	esac
	case "$getprotobyname_r_proto" in
	'') d_getprotobyname_r=undef ; echo "Disabling getprotobyname_r, cannot find prototype." ;;
	* ) getprotobyname_r_proto="REENTRANT_$getprotobyname_r_proto" ; echo "$try" ;;
	esac
	;;
esac

