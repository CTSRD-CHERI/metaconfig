?MAKE:d_setgrent_r setgrent_r_proto: Inlibc Protochk i_systypes i_grp
?MAKE:	-pick add $@ %<
?S:d_setgrent_r:
?S:	This variable conditionally defines the HAS_SETGRENT_R symbol,
?S:	which indicates to the C program that the setgrent_r()
?S:	routine is available.
?S:.
?S:setgrent_r_proto:
?S:	This variable encodes the prototype of setgrent_r.
?S:.
?C:HAS_SETGRENT_R:
?C:	This symbol, if defined, indicates that the setgrent_r routine
?C:	is available to setgrent re-entrantly.
?C:.
?C:SETGRENT_R_PROTO:
?C:	This symbol encodes the prototype of setgrent_r.
?C:.
?H:#$d_setgrent_r HAS_SETGRENT_R	   /**/
?H:#define SETGRENT_R_PROTO $setgrent_r_proto	   /**/
?H:.
?T:try hdrs
?LINT:set d_setgrent_r
?LINT:set setgrent_r_proto
: see if setgrent_r exists
set setgrent_r d_setgrent_r
eval $inlibc
case "$d_setgrent_r" in
"$define")
	hdrs="$i_systypes sys/types.h define stdio.h $i_grp grp.h"
	case "$setgrent_r_proto" in
	'') try='int setgrent_r(FILE**);'
	./protochk "extern $try" $hdrs && setgrent_r_proto=I_H ;;
	esac
	case "$setgrent_r_proto" in
	'') try='void setgrent_r(FILE**);'
	./protochk "extern $try" $hdrs && setgrent_r_proto=V_H ;;
	esac
	case "$setgrent_r_proto" in
	'')	d_setgrent_r=undef
		echo "Disabling setgrent_r, cannot determine prototype." ;;
	* )	case "$setgrent_r_proto" in
		REENTRANT_PROTO*) ;;
		*) setgrent_r_proto="REENTRANT_PROTO_$setgrent_r_proto" ;;
		esac
		echo "Prototype: $try" ;;
	esac
	;;
esac

