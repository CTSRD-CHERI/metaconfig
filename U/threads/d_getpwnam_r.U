?MAKE:d_getpwnam_r getpwnam_r_proto: Inlibc Protochk i_systypes i_pwd
?MAKE:  -pick add $@ %<
?S:d_getpwnam_r:
?S:     This variable conditionally defines the HAS_GETPWNAM_R symbol,
?S:     which indicates to the C program that the getpwnam_r()
?S:     routine is available.
?S:.
?S:getpwnam_r_proto:
?S:     This variable encodes the prototype of getpwnam_r.
?S:.
?C:HAS_GETPWNAM_R:
?C:     This symbol, if defined, indicates that the getpwnam_r routine
?C:     is available to getpwnam re-entrantly.
?C:.
?C:GETPWNAM_R_PROTO:
?C:     This symbol encodes the prototype of getpwnam_r.
?C:.
?H:#$d_getpwnam_r HAS_GETPWNAM_R          /**/
?H:#define GETPWNAM_R_PROTO $getpwnam_r_proto     /**/
?H:.
?T:try hdrs
?LINT:set d_getpwnam_r
?LINT:set getpwnam_r_proto
: see if getpwnam_r exists
set getpwnam_r d_getpwnam_r
eval $inlibc
case "$d_getpwnam_r" in
"$define")
	hdrs="$i_systypes sys/types.h $i_pwd pwd.h"
	case "$getpwnam_r_proto" in
	'')	try='extern int getpwnam_r(const char*, struct passwd*, char*, size_t, struct passwd**);'
		./protochk "$try" $hdrs && getpwnam_r_proto=I_CSBWR;
	;;
	esac
	case "$getpwnam_r_proto" in
	'')	try='extern int getpwnam_r(const char*, struct passwd*, char*, int, struct passwd**);'
		./protochk "$try" $hdrs && getpwnam_r_proto=I_CSBIR;
	;;
	esac
	case "$getpwnam_r_proto" in
	'')	try='extern int getpwnam_r(const char*, struct passwd*, char*, int);'
		./protochk "$try" $hdrs && getpwnam_r_proto=I_CSBI;
	;;
	esac
	case "$getpwnam_r_proto" in
	'')	try='extern struct passwd* getpwnam_r(const char*, struct passwd*, char*, int);'
		./protochk "$try" $hdrs && getpwnam_r_proto=S_CSBI;
	;;
	esac
	case "$getpwnam_r_proto" in
	'') d_getpwnam_r=undef ; echo "Disabling getpwnam_r, cannot find prototype." ;;
	* ) getpwnam_r_proto="REENTRANT_$getpwnam_r_proto" ; echo "$try" ;;
	esac
	;;
esac

