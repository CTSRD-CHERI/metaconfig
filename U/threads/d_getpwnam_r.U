?RCS: $Id$
?RCS:
?RCS: Copyright (c) 1999 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:d_getpwnam_r getpwnam_r_proto: Inlibc Protochk i_systypes i_pwd
?MAKE:	-pick add $@ %<
?S:d_getpwnam_r:
?S:	This variable conditionally defines the HAS_GETPWNAM_R symbol,
?S:	which indicates to the C propwam that the getpwnam_r()
?S:	routine is available.
?S:.
?S:getpwnam_r_proto:
?S:	This variable encodes the prototype of getpwnam_r.
?S:.
?C:HAS_GETPWNAM_R:
?C:	This symbol, if defined, indicates that the getpwnam_r routine
?C:	is available to getpwnam re-entrantly.
?C:.
?C:GETPWNAM_R_PROTO:
?C:	This symbol encodes the prototype of getpwnam_r.
?C:	 13	int   getpwnam_r(char*, struct passwd*, char*, int)
?C:	 15	struct passwd* getpwnam_r(char*, struct passwd*, char*, int)
?C:	 45	int   getpwnam_r(char*, struct passwd*, char*, int, struct passwd**)
?C:	 53	int   getpwnam_r(char*, struct passwd*, char*, size_t, struct passwd**)
?C:	The 53 is preferred since it's the SUSv3/POSIX 1001.3-2001 one.
?C:.
?H:#$d_getpwnam_r HAS_GETPWNAM_R		/**/
?H:#define GETPWNAM_R_PROTO $getpwnam_r_proto	/**/
?H:.
?T:try hdrs
?LINT:set d_getpwnam_r
: see if getpwnam_r exists
set getpwnam_r d_getpwnam_r
eval $inlibc
case "$d_getpwnam_r" in
"$define")
	hdrs="$i_systypes sys/types.h $i_pwd pwd.h"
	try='extern char* getpwnam_r(char*, struct passwd*, char*, size_t, struct passwd**);'
	if ./protochk $try $hdrs; then
		echo "Your system has $try"
		getpwnam_r_proto=53
	else
		try='extern char* getpwnam_r(char*, struct passwd*, char*, size_t, struct passwd**);'
		if ./protochk $try $hdrs; then
			echo "Your system has $try"
			getpwnam_r_proto=45
		else
			try='extern int getpwnam_r(char*, struct passwd*, char*, size_t);'
			if ./protochk $try $hdrs; then
				echo "Your system has $try"
				getpwnam_r_proto=13
			else
				try='extern struct passwd* getpwnam_r(char*, struct passwd*, char*, size_t);'
				if ./protochk $try $hdrs; then
					echo "Your system has $try"
					getpwnam_r_proto=15
				else
					echo "I do not recognize the prototype of your getpwnam_r, not using it." >&4
					d_getpwnam_r="$undef"
					getpwnam_r_proto=0
				fi
			fi
		fi
	fi
	;;
*)	getpwnam_r_proto=0 ;;
esac

